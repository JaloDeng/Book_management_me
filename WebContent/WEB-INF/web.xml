<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
	<!-- 读取顺序context->listener->filter->servlet -->
	<welcome-file-list>
	  <welcome-file>index.html</welcome-file>
	</welcome-file-list>
	
	
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>BaseApp_JavaEE.root</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/com/lhb/resource/log4j.properties</param-value>
	</context-param>
	<!--Spring默认刷新Log4j配置文件的间隔,单位为millisecond -->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>600000</param-value>
	</context-param>
	<!-- Web 项目 Spring 加载 Log4j 的监听 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	
	
	<!-- 配置Shiro过滤器,先让Shiro过滤系统接收到的请求 -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<!-- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 -->
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 配置编码过滤器 开始 -->
	<!-- 使用Spring中的过滤器解决在请求和应答中的中文乱码问题 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<!--强制转换编码(request和response均适用) -->
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 配置编码过滤器 结束 -->
	
	<!-- 配置spring管理OpenEntityManagerInViewFilter-->  
	<filter>  
		<filter-name>hibernateFilter</filter-name>  
		<filter-class>  
				org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter  
		</filter-class>  
	</filter>  
	<filter-mapping>  
		<filter-name>hibernateFilter</filter-name>  
		<url-pattern>/*</url-pattern>  
	</filter-mapping>  
	
	
	<!--防止发生java.beans.Introspector内存泄露,应将它配置在ContextLoaderListener的前面 -->  
	<listener>
		<listener-class>
			org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>


	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:com/lhb/resource/spring-base.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	   

	<servlet>
		<servlet-name>spring-dispather</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:com/lhb/resource/spring-dispather.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>spring-dispather</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	

	
	
</web-app>